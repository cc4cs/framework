# Change Log
## Version: 0.1.0
All notable changes to this project will be documented in this file.
This project adheres to [Semantic Versioning](http://semver.org/).

## [Unreleased]
### To Change
- SPARC support: Now MIPSC supports also SPARC architecture.
                 It uses sparc-elf-gcc 4.2.2 and TSIM_EVAL.
- Update Makefile or bash: when mipsc command is invoked, folders should be
                           created only if mipsc scripts are applicable
                           (e.g. checkdir should only check whether a .c file
                           is present in calling folder).
- Add mipsc.sh labels: Enable the machanism for usage of something like
                       "mipsc -dbg_lv 5 -output_lv 3".
                       Enable -dbg_lv flag => manage verbosity of debug
                       Enable -output_lv manage ouput table infos.
                       Enable many other flags.
- Report Table Drawing: Generalize the algorithm to find the cell length
                        of the report table.
- Multiple C projects: The scripts shall be adapted to manage program developed
                       in multiple files.
- Update printed results: check the DBGLEVEL to show only debug execution
                          output and perl script report.

## 0.1.1 [Unreleased]
### Added

### Changed

## 0.1.0 
### Added
- TSIM support: Now the framework process files generated with SPARC compiler 
		and simulator. It uses TSIM Evaluatino version in order to obtain data.
- input auto generation: A new script was added in order to automatically generate input 
			 incites
### Changed

## 0.0.1
### Added
- Version number in final log record Added.
- Refactor perl script: Split mipsc.pl file in multiple pearl files.
                        Implement OOP paradigm.
                        Comment code.
- Report column selection: A boolean flag for each column, of report table, is
                           implemented to set the column data visible or hidden.
- Assembly instruction: Two column in report table added
                           1) number of assembly Instructions
                           2) projection of number of clock cycles, based on (1)
- CSV Report module: A report module has been added in order to
                     automatically produce mipsc report in CSV format.

### Changed
- Update/Integrate computation logic for TPI and CCPI.
- bug on parseGCovFile solved: $cInstrExec never reset.
- bug on computeVariance solved: number of incites were assigned as ($count - 1)
                                 instead of ($count)

## 0.0.0 - 2016-08-09
### Added
- This CHANGELOG file to hopefully serve as an evolving description
  of MIPSC project.
- README:
-* Requisites: which are the tools used by mipsc process,
               which needs to be installed in a previous phase.
-* How to install: mipsc installation procedure,
                   in order to use mipsc by "mipsc" terminal command
-* How to use: addresses procedures to manage input incites and
               project general name
- makefile :
-* build commands for gcc and sdcc
-* stats commands for gcov and isasim
-* installation commands gcc, sdcc, gcov, isasim
- mipsc.pl :
-* parse gcov and isasim oputputs
-* compute TPI avarage, CCPI avarage and variance
-* report
-** report for each input incite: number of executed instruction,
                                  execution time, TPI, CCPI
-** report CCPI min, max, avarage, variance, standard deviation.
- mipsc.sh :
-* calls makefile and mipsc.pl in order to perform
   the whole mipsc calculation process.

[Unreleased]: ./versions/0.1.1/
[0.1.0]: ./versions/0.1.0/
[0.0.1]: ./versions/0.0.1/
[0.0.0]: ./versions/0.0.0/
