cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ frama-c -metrics -metrics-ast cabs banker_alg.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing banker_alg.c (with preprocessing)
[metrics] Halstead metrics
          ================
          Total operators: 247 
          Distinct operators: 33 
          Total_operands: 119 
          Distinct operands: 44 
          Program length: 366 
          Vocabulary size: 77 
          Program volume: 2293.64 
          Effort: 102353.86 
          Program level: 0.02 
          Difficulty level: 44.62 
          Time to implement: 5686.33 
          Bugs delivered: 0.73 
          
          
          Global statistics (Halstead)
          ============================
          Operators
          ---------
            typedef: 30
            array: 7
            if: 2
            for: 4
            return: 2
            ): 6
            ,: 24
            {: 5
            (: 6
            }: 5
            []: 19
            ;: 28
            -: 2
            ++: 4
            +=: 2
            ==: 1
            <: 4
            =: 11
            <=: 1
            -=: 1
            enum  { n_resources4 }: 1
            TARGET_TYPE: 3
            enum  { n_process2 }: 1
            short: 4
            long: 16
            int: 10
            signed: 14
            TARGET_INDEX: 2
            void: 3
            unsigned: 18
            char: 6
            uint32_t: 1
            uint8_t: 4
            
          Operands
          --------
            create_needs: 1
            P0: 2
            banker_algorithm: 1
            n_resources: 6
            found: 4
            available: 4
            n_process: 6
            max: 2
            need: 5
            allocated: 4
            resetValues: 1
            Frama_C_bzero: 1
            P1: 2
            P2: 2
            j: 18
            size: 1
            prototype: 1
            P3: 2
            Frama_C_copy_block: 1
            i: 15
            FC_BUILTIN: 2
            246: 1
            188: 1
            228: 1
            2: 1
            79: 1
            12: 1
            189: 1
            180: 1
            140: 1
            1: 3
            7: 1
            154: 1
            4: 1
            3: 1
            43: 1
            224: 1
            36: 1
            92: 1
            0: 14
            93: 1
            46: 1
            104: 1
            21: 1
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ 
---------------------------------------------------------------
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ frama-c -metrics -metrics-ast acsl banker_alg.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing banker_alg.c (with preprocessing)
[metrics] ACSL Statistics
          ===============
          requires: 3 total, 3 in function contracts,0 in statement contracts
          ensures: 2 total, 2 in function contracts, 0 in statement contracts
          behaviors: 2 total, 2 in function contracts, 0 in statement contracts
          assumes: 0 total, 0 in function contracts, 0 in statement contracts
          assigns: 2 total, 2 in function contracts, 0 in statement contracts
          froms: 2 total, 2 in function contracts, 0 in statement contracts
          invariants: 0
          loop assigns: 0
          loop froms: 0
          variants: 0
          asserts: 0
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ 
--------------------------------------------------------------------
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ frama-c -metrics -metrics-by-function banker_alg.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing banker_alg.c (with preprocessing)
[metrics] Cil AST
          
          Stats for function <banker_alg.c/banker_algorithm>
          ================================================== 
          Sloc = 23
          Decision point = 4
          Global variables = 0
          If = 4
          Loop = 2
          Goto = 1
          Assignment = 11
          Exit point = 1
          Function = 1
          Function call = 0
          Pointer dereferencing = 0
          Cyclomatic complexity = 5
          
          Stats for function <banker_alg.c/create_needs>
          ============================================== 
          Sloc = 14
          Decision point = 2
          Global variables = 0
          If = 2
          Loop = 2
          Goto = 0
          Assignment = 5
          Exit point = 1
          Function = 1
          Function call = 0
          Pointer dereferencing = 0
          Cyclomatic complexity = 3
          
          Stats for function <banker_alg.c/main>
          ====================================== 
          Sloc = 4
          Decision point = 0
          Global variables = 0
          If = 0
          Loop = 0
          Goto = 0
          Assignment = 0
          Exit point = 1
          Function = 1
          Function call = 3
          Pointer dereferencing = 0
          Cyclomatic complexity = 1
          
          Stats for function <banker_alg.c/resetValues>
          ============================================= 
          Sloc = 5
          Decision point = 0
          Global variables = 0
          If = 0
          Loop = 0
          Goto = 0
          Assignment = 4
          Exit point = 1
          Function = 1
          Function call = 0
          Pointer dereferencing = 0
          Cyclomatic complexity = 1
[metrics] Defined functions (4)
          =====================
           banker_algorithm (1 call); create_needs (1 call); main (0 call);
           resetValues (1 call); 
          
          Undefined functions (0)
          =======================
           
          
          'Extern' global variables (0)
          =============================
           
          
          Potential entry points (1)
          ==========================
           main; 
          
          Global metrics
          ============== 
          Sloc = 46
          Decision point = 6
          Global variables = 12
          If = 6
          Loop = 4
          Goto = 1
          Assignment = 20
          Exit point = 4
          Function = 4
          Function call = 3
          Pointer dereferencing = 0
          Cyclomatic complexity = 10
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ 
---------------------------------------------------------------------------
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ frama-c -metrics -metrics-value-cover banker_alg.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing banker_alg.c (with preprocessing)
[metrics] Defined functions (4)
          =====================
           banker_algorithm (1 call); create_needs (1 call); main (0 call);
           resetValues (1 call); 
          
          Undefined functions (0)
          =======================
           
          
          'Extern' global variables (0)
          =============================
           
          
          Potential entry points (1)
          ==========================
           main; 
          
          Global metrics
          ============== 
          Sloc = 46
          Decision point = 6
          Global variables = 12
          If = 6
          Loop = 4
          Goto = 1
          Assignment = 20
          Exit point = 4
          Function = 4
          Function call = 3
          Pointer dereferencing = 0
          Cyclomatic complexity = 10
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  P0 ∈ {0}
  P1 ∈ {0}
  P2 ∈ {0}
  P3 ∈ {0}
  available[0] ∈ {0}
           [1] ∈ {93}
           [2] ∈ {180}
           [3] ∈ {154}
  max[0][0] ∈ {228}
     [0][1] ∈ {79}
     [0][2] ∈ {21}
     [0][3] ∈ {188}
     [1][0] ∈ {92}
     [1][1] ∈ {140}
     [1][2] ∈ {246}
     [1][3] ∈ {104}
  allocated[0][0] ∈ {46}
           [0][1] ∈ {43}
           [0][2] ∈ {36}
           [0][3] ∈ {3}
           [1][0] ∈ {7}
           [1][1] ∈ {12}
           [1][2] ∈ {224}
           [1][3] ∈ {189}
  need[0..1][0..3] ∈ {0}
  size ∈ {2}
  i ∈ {0}
  j ∈ {0}
  found ∈ {0}
[value] computing for function create_needs <- main.
        Called from banker_alg.c:80.
banker_alg.c:30:[value] entering loop for the first time
banker_alg.c:34:[value] entering loop for the first time
[value] Recording results for create_needs
[value] Done for function create_needs
[value] computing for function banker_algorithm <- main.
        Called from banker_alg.c:81.
banker_alg.c:46:[value] entering loop for the first time
banker_alg.c:51:[value] entering loop for the first time
[value] Recording results for banker_algorithm
[value] Done for function banker_algorithm
[value] computing for function resetValues <- main.
        Called from banker_alg.c:82.
[value] Recording results for resetValues
[value] Done for function resetValues
[value] Recording results for main
[value] done for function main
[metrics] Value coverage statistics
          =========================
          Syntactically reachable functions = 4 (out of 4)
          Semantically reached functions = 4
          Coverage estimation = 100.0%
[metrics] References to non-analyzed functions
          ------------------------------------
[metrics] Statements analyzed by Value
          ----------------------------
          46 stmts in analyzed functions, 46 stmts analyzed (100.0%)
          main: 4 stmts out of 4 (100.0%)
          banker_algorithm: 23 stmts out of 23 (100.0%)
          create_needs: 14 stmts out of 14 (100.0%)
          resetValues: 5 stmts out of 5 (100.0%)
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/banker_algorithm$ 
