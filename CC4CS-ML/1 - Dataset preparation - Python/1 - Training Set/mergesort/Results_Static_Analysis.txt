cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/mergesort$ frama-c -metrics -metrics-ast cabs mergesort.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing mergesort.c (with preprocessing)
[metrics] Halstead metrics
          ================
          Total operators: 271 
          Distinct operators: 36 
          Total_operands: 133 
          Distinct operands: 45 
          Program length: 404 
          Vocabulary size: 81 
          Program volume: 2561.30 
          Effort: 136261.13 
          Program level: 0.02 
          Difficulty level: 53.20 
          Time to implement: 7570.06 
          Bugs delivered: 0.88 
          
          
          Global statistics (Halstead)
          ============================
          Operators
          ---------
            typedef: 30
            array: 2
            for: 5
            if: 2
            return: 1
            while: 1
            ): 9
            ,: 19
            {: 5
            ?: 1
            (: 9
            :: 1
            }: 5
            []: 12
            ;: 32
            &&: 1
            +: 3
            ++: 10
            -: 12
            +=: 1
            <: 2
            =: 15
            *=: 1
            <=: 8
            *: 2
            TARGET_TYPE: 4
            short: 4
            long: 18
            int: 10
            signed: 14
            TARGET_INDEX: 3
            void: 3
            enum  { size18 }: 1
            unsigned: 18
            char: 6
            int8_t: 1
            
          Operands
          --------
            h: 13
            P0: 2
            a: 8
            min: 1
            start: 2
            mergesort: 1
            b: 2
            merge: 1
            resetValues: 1
            f2: 3
            Frama_C_bzero: 1
            m: 7
            i2: 5
            P1: 2
            x: 13
            P2: 2
            prototype: 1
            P3: 2
            size: 5
            Frama_C_copy_block: 1
            c: 2
            f1: 4
            i1: 6
            i: 7
            FC_BUILTIN: 2
            2: 3
            119: 1
            12: 1
            59: 1
            111: 1
            23: 1
            128: 1
            73: 1
            1: 7
            100: 1
            35: 1
            14: 1
            5: 1
            96: 1
            6: 1
            47: 2
            0: 11
            78: 1
            18: 1
            29: 1
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/mergesort$ frama-c -metrics -metrics-ast acsl mergesort.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing mergesort.c (with preprocessing)
[metrics] ACSL Statistics
          ===============
          requires: 3 total, 3 in function contracts,0 in statement contracts
          ensures: 2 total, 2 in function contracts, 0 in statement contracts
          behaviors: 2 total, 2 in function contracts, 0 in statement contracts
          assumes: 0 total, 0 in function contracts, 0 in statement contracts
          assigns: 2 total, 2 in function contracts, 0 in statement contracts
          froms: 2 total, 2 in function contracts, 0 in statement contracts
          invariants: 0
          loop assigns: 0
          loop froms: 0
          variants: 0
          asserts: 0
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/mergesort$ frama-c -metrics -metrics-by-function mergesort.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing mergesort.c (with preprocessing)
[metrics] Cil AST
          
          Stats for function <mergesort.c/main>
          ===================================== 
          Sloc = 3
          Decision point = 0
          Global variables = 0
          If = 0
          Loop = 0
          Goto = 0
          Assignment = 0
          Exit point = 1
          Function = 1
          Function call = 2
          Pointer dereferencing = 0
          Cyclomatic complexity = 1
          
          Stats for function <mergesort.c/merge>
          ====================================== 
          Sloc = 52
          Decision point = 7
          Global variables = 0
          If = 7
          Loop = 4
          Goto = 0
          Assignment = 29
          Exit point = 1
          Function = 1
          Function call = 0
          Pointer dereferencing = 0
          Cyclomatic complexity = 8
          
          Stats for function <mergesort.c/mergesort>
          ========================================== 
          Sloc = 20
          Decision point = 2
          Global variables = 0
          If = 2
          Loop = 2
          Goto = 0
          Assignment = 6
          Exit point = 1
          Function = 1
          Function call = 2
          Pointer dereferencing = 0
          Cyclomatic complexity = 3
          
          Stats for function <mergesort.c/min>
          ==================================== 
          Sloc = 4
          Decision point = 1
          Global variables = 0
          If = 1
          Loop = 0
          Goto = 0
          Assignment = 2
          Exit point = 1
          Function = 1
          Function call = 0
          Pointer dereferencing = 0
          Cyclomatic complexity = 2
          
          Stats for function <mergesort.c/resetValues>
          ============================================ 
          Sloc = 5
          Decision point = 0
          Global variables = 0
          If = 0
          Loop = 0
          Goto = 0
          Assignment = 4
          Exit point = 1
          Function = 1
          Function call = 0
          Pointer dereferencing = 0
          Cyclomatic complexity = 1
[metrics] Defined functions (5)
          =====================
           main (0 call); merge (1 call); mergesort (1 call); min (1 call);
           resetValues (1 call); 
          
          Undefined functions (0)
          =======================
           
          
          'Extern' global variables (0)
          =============================
           
          
          Potential entry points (1)
          ==========================
           main; 
          
          Global metrics
          ============== 
          Sloc = 84
          Decision point = 10
          Global variables = 6
          If = 10
          Loop = 6
          Goto = 0
          Assignment = 41
          Exit point = 5
          Function = 5
          Function call = 4
          Pointer dereferencing = 0
          Cyclomatic complexity = 15
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/mergesort$ frama-c -metrics -metrics-cover main mergesort.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing mergesort.c (with preprocessing)
[metrics] Defined functions (5)
          =====================
           main (0 call); merge (1 call); mergesort (1 call); min (1 call);
           resetValues (1 call); 
          
          Undefined functions (0)
          =======================
           
          
          'Extern' global variables (0)
          =============================
           
          
          Potential entry points (1)
          ==========================
           main; 
          
          Global metrics
          ============== 
          Sloc = 84
          Decision point = 10
          Global variables = 6
          If = 10
          Loop = 6
          Goto = 0
          Assignment = 41
          Exit point = 5
          Function = 5
          Function call = 4
          Pointer dereferencing = 0
          Cyclomatic complexity = 15
[metrics] Functions syntactically reachable from main: 5
          ----------------------------------------------
          <mergesort.c>: resetValues; merge; min; mergesort; main; 
          
          Functions syntactically unreachable from main: 0
          ------------------------------------------------
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/mergesort$ frama-c -metrics -metrics-value-cover mergesort.c 
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing mergesort.c (with preprocessing)
[metrics] Defined functions (5)
          =====================
           main (0 call); merge (1 call); mergesort (1 call); min (1 call);
           resetValues (1 call); 
          
          Undefined functions (0)
          =======================
           
          
          'Extern' global variables (0)
          =============================
           
          
          Potential entry points (1)
          ==========================
           main; 
          
          Global metrics
          ============== 
          Sloc = 84
          Decision point = 10
          Global variables = 6
          If = 10
          Loop = 6
          Goto = 0
          Assignment = 41
          Exit point = 5
          Function = 5
          Function call = 4
          Pointer dereferencing = 0
          Cyclomatic complexity = 15
[value] Analyzing a complete application starting at main
[value] Computing initial state
[value] Initial state computed
[value] Values of globals at initialization
  a[0] ∈ {0}
   [1] ∈ {-111}
   [2] ∈ {73}
   [3] ∈ {-47}
   [4] ∈ {100}
   [5] ∈ {-14}
   [6] ∈ {59}
   [7] ∈ {119}
   [8] ∈ {12}
   [9] ∈ {-23}
   [10] ∈ {47}
   [11] ∈ {96}
   [12] ∈ {35}
   [13] ∈ {-6}
   [14] ∈ {-5}
   [15] ∈ {-128}
   [16] ∈ {78}
   [17] ∈ {29}
  P0 ∈ {0}
  P1 ∈ {0}
  P2 ∈ {0}
  P3 ∈ {0}
  h ∈ {0}
[value] computing for function mergesort <- main.
        Called from mergesort.c:88.
mergesort.c:70:[value] entering loop for the first time
mergesort.c:74:[value] entering loop for the first time
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
mergesort.c:28:[value] entering loop for the first time
mergesort.c:34:[kernel] warning: accessing out of bounds index [0..127]. assert tmp_1 < 18;
                                                          (tmp_1 from i++)
mergesort.c:34:[kernel] warning: accessing out of bounds index [-128..127].
                  assert 0 ≤ tmp_1;
                  (tmp_1 from i++)
mergesort.c:40:[value] entering loop for the first time
mergesort.c:43:[kernel] warning: accessing out of bounds index [-128..127].
                  assert 0 ≤ tmp_3;
                  (tmp_3 from i++)
mergesort.c:43:[kernel] warning: accessing out of bounds index [-128..127].
                  assert tmp_3 < 18;
                  (tmp_3 from i++)
mergesort.c:53:[value] entering loop for the first time
mergesort.c:56:[kernel] warning: accessing out of bounds index [0..127]. assert tmp_5 < 18;
                                                          (tmp_5 from i++)
mergesort.c:56:[kernel] warning: accessing out of bounds index [-128..127].
                  assert 0 ≤ tmp_5;
                  (tmp_5 from i++)
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
mergesort.c:31:[kernel] warning: accessing uninitialized left-value: assert \initialized(&a[i1]);
mergesort.c:31:[kernel] warning: accessing uninitialized left-value: assert \initialized(&a[i2]);
mergesort.c:32:[kernel] warning: accessing out of bounds index [0..127]. assert tmp < 18;
                                                          (tmp from i++)
mergesort.c:32:[kernel] warning: accessing out of bounds index [-128..127]. assert 0 ≤ tmp;
                                                             (tmp from i++)
mergesort.c:47:[value] entering loop for the first time
mergesort.c:50:[kernel] warning: accessing out of bounds index [-128..127].
                  assert 0 ≤ tmp_4;
                  (tmp_4 from i++)
mergesort.c:50:[kernel] warning: accessing out of bounds index [-128..127].
                  assert tmp_4 < 18;
                  (tmp_4 from i++)
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
mergesort.c:31:[kernel] warning: accessing out of bounds index [0..18]. assert i1 < 18;
mergesort.c:43:[kernel] warning: accessing out of bounds index [0..18]. assert h < 18;
[value] Recording results for merge
[value] Done for function merge
[value] computing for function min <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for min
[value] Done for function min
[value] computing for function merge <- mergesort <- main.
        Called from mergesort.c:78.
[value] Recording results for merge
[value] Done for function merge
[value] Recording results for mergesort
[value] Done for function mergesort
[value] computing for function resetValues <- main.
        Called from mergesort.c:89.
[value] Recording results for resetValues
[value] Done for function resetValues
[value] Recording results for main
[value] done for function main
[metrics] Value coverage statistics
          =========================
          Syntactically reachable functions = 5 (out of 5)
          Semantically reached functions = 5
          Coverage estimation = 100.0%
[metrics] References to non-analyzed functions
          ------------------------------------
[metrics] Statements analyzed by Value
          ----------------------------
          84 stmts in analyzed functions, 84 stmts analyzed (100.0%)
          main: 3 stmts out of 3 (100.0%)
          mergesort: 20 stmts out of 20 (100.0%)
          min: 4 stmts out of 4 (100.0%)
          merge: 52 stmts out of 52 (100.0%)
          resetValues: 5 stmts out of 5 (100.0%)
cerbero@cerbero-VirtualBox:~/Desktop/PAOLO_ANALISI/DOTTORATO/mergesort$ 
